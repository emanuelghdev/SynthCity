// main global script file

// Variables
int safe_code[4];                               // Array para almacenar la secuencia correcta del código
int safe_input[4];                              // Array para almacenar la entrada del jugador
int safe_count = 0;                             // Contador de dígitos ingresados

// called when the game starts, before the first room is loaded
function game_start()
{ 
  // Auto-save on the save slot 999
  SetRestartPoint();
  
  // Activar música
  aBackgroundMusic.Play(eAudioPriorityNormal, eRepeat);
  
  // Definir fuente estándar de textp
  Game.SpeechFont = eFontFont4;
  
  // Secuencia correcta del código del contenedor de basura
  safe_code[0] = 0;
  safe_code[1] = 4;
  safe_code[2] = 5;
  safe_code[3] = 1;
}

// called on every game cycle, except when the game is blocked
function repeatedly_execute()
{
}

// called on every game cycle, even when the game is blocked
function repeatedly_execute_always()
{
}

// called when a key is pressed
function on_key_press(eKeyCode keycode, int mod)
{
  if (IsGamePaused())
  {
    // game paused, so don't react to any keypresses
    keycode = 0;
  }
  else if (keycode == eKeyQ && (mod & eKeyModCtrl))
  {
    // Ctrl-Q will quit the game
    QuitGame(1);
  }
  else if (keycode == eKeyF9)
  {
    // F9 will restart the game
    RestartGame();
  }
  else if (keycode == eKeyF12)
  {
    // F12 will save a screenshot to the save game folder
    SaveScreenShot("screenshot.pcx");
  }
  else if (mod & eKeyModCtrl)
  {
    if (keycode == eKeyS)
    {
      // Ctrl-S will give the player all defined inventory items
      Debug(0, 0);
    }
    else if (keycode == eKeyV)
    {
      // Ctrl-V will show game engine version and build date
      Debug(1, 0);
    }
    else if (keycode == eKeyA)
    {
      // Ctrl-A will show walkable areas
      Debug(2, 3);
    }
    else if (keycode == eKeyX)
    {
      // Ctrl-X will let the player teleport to any room
      Debug(3, 0);
    }
  }
}

// called when a mouse button is clicked
function on_mouse_click(MouseButton button)
{
  if (IsGamePaused())
  {
    // game is paused, so do nothing (i.e. don't process mouse clicks)
  }
  else if (button == eMouseLeft)
  {
    // left-click, so try using the current mouse cursor mode at this position
    Room.ProcessClick(mouse.x, mouse.y, mouse.Mode);
  }
  else if (button == eMouseRight)
  {
    // right-click, so cycle the mouse cursor mode
    mouse.SelectNextMode();
  }
}

function dialog_request(int param)
{

}


//////////////////////////////////////////////////////////////////////////
//                           Caracteres                                 //
//////////////////////////////////////////////////////////////////////////

// Akira
function cCharacter_Look(Character *theCharacter, CursorMode mode)
{
  cCharacter.Say("Kachoow!");
  cCharacter.Say("Este look me sienta genial");
}

function cCharacter_Interact(Character *theCharacter, CursorMode mode)
{
  cCharacter.Say("Según las indicaciones, esta es la zona...");
  cCharacter.Say("Parecía un tema serio de contrabando ilegal");
  cCharacter.Say("Debería revisar los alrededores y hablar con la gente");
  cCharacter.Say("No puedo perder el tiempo");
}

function cCharacter_UseInv(Character *theCharacter, CursorMode mode)
{
  if(cCharacter.ActiveInventory == invDinero){
    cCharacter.Say("No debería de toquetear esto ahora");
    cCharacter.Say("Tengo que guardarlo en la mochila");
    cCharacter.Say("Si todo sale bien... me compro un smoothie");
    cCharacter.Say("Como un campeón");
  }
  else if(cCharacter.ActiveInventory == invDecodificador){
    cCharacter.Say("Mmmm......");
    cCharacter.Say("Nada");
    cCharacter.Say("No parece que yo tenga ningún mensaje-holográfico-secreto");
    cCharacter.Say("Decepcionado es poco");
  }
  else if(cCharacter.ActiveInventory == invLlave){
    cCharacter.Say("No creo que esto funcione");
    cCharacter.Say("Igual debería de usar la llave electrónica...");
    cCharacter.Say("En algún dispositivo electrónico");
    cCharacter.Say("Si es que tiene sentido");
  }
  else if(cCharacter.ActiveInventory == invIngrediente){
    cCharacter.Say("Nop");
    cCharacter.Say("Estoy de servicio");
    cCharacter.Say("Y no me duele nada");
    cCharacter.Say("No sé para que querría un ibuprofeno");
  }
  else if(cCharacter.ActiveInventory == invDatos){
    cCharacter.Say("Tiene que haber Yottabytes de información");
    cCharacter.Say("No sabría ni por donde empezar");
  }
  else if(cCharacter.ActiveInventory == invPaquete){
    cCharacter.Say("Es imposible abrirlo");
    cCharacter.Say("Y es algo grande como pisapapeles");
    cCharacter.Say("Así que igual debería de encontrarle otro destino");
  }
  else if(cCharacter.ActiveInventory == invVideo){
    cCharacter.Say("Necesito un ordenador para ver la prueba");
    cCharacter.Say("Pero estoy seguro que es lo que necesito");
    cCharacter.Say("Debería de volver a comisaría ya");
    cCharacter.Say("Y comprarme ese smoothie");
    cCharacter.Say("Me lo he ganado");
  }
  cCharacter.ActiveInventory = null;
}

// Lena
function cNPC1_Look(Character *theCharacter, CursorMode mode)
{
  cCharacter.Say("Esa mujer parece estar en la pomada");
  cCharacter.Say("Quizá debería preguntarle");
}

function cNPC1_Interact(Character *theCharacter, CursorMode mode)
{
  cCharacter.Walk(120, 200, eBlock, eWalkableAreas);
  Wait(7);
  if(cNPC1.GetProperty("Dialog2") != 1){
    dDialog1.Start();
  }
  else if(cNPC1.GetProperty("Dialog3") != 1){
    dDialog2.Start();
  }
  else{
    dDialog3.Start();
  }
}

function cNPC1_UseInv(Character *theCharacter, CursorMode mode)
{
  cCharacter.Walk(120, 200, eBlock, eWalkableAreas);
  Wait(7);
  if(cCharacter.ActiveInventory == invDinero && cNPC1.GetProperty("Dialog1") == 1){
    cCharacter.LoseInventory(invDinero);
    cNPC1.Say("Trato hecho");
    cNPC1.Say("Disfruta de esta delicia, colega");
    Wait(5);
    cCharacter.AddInventory(invDecodificador);
    cNPC1.SetProperty("Dialog2",  1);
  }
  else if(cCharacter.ActiveInventory == invDecodificador && cNPC1.GetProperty("Dialog2") == 1){
    cNPC1.Say("Lo siento, colega");
    cNPC1.Say("No se aceptan devoluciones");
  }
  else{
    dDialog3.Start();
  }
  cCharacter.ActiveInventory = null;
}

// Cubo de basura
function cCuboBasura_Look(Character *theCharacter, CursorMode mode)
{
  if(cCuboBasura.GetProperty("Dialog1") != 1){
    cCharacter.Say("Mmmm...");
    Wait(5);
    cCharacter.Say("Mmmmmm...");
    Wait(3);
    cCharacter.Say("Mmmmmmmm...");
    cCharacter.Say("No quería llegar a esto");
    cCharacter.Say("Pero según las filtraciones, los contenedores de basura...");
    cCharacter.Say("Son los lugares donde se depositan los paquetes calientes");
    cCharacter.Say("Debería de echarle un buen vistazo");
    cCharacter.Say("Que remedio");
    cCuboBasura.SetProperty("Dialog1",  1);
  }
  else{
    cCharacter.Say("Debería de echarle un buen vistazo");
    cCharacter.Say("Que remedio");
  }
}

function cCuboBasura_Interact(Character *theCharacter, CursorMode mode)
{
  cCharacter.Walk(580, 220, eBlock, eWalkableAreas);
  Wait(7);
  if(cCuboBasura.GetProperty("Dialog2") != 1){
    dDialog4.Start();
  }
  else if(cCuboBasura.GetProperty("Dialog3") != 1){
    Wait(5);
    cCharacter.Say("Ehhh");
    cCharacter.Say("Hay algo aquí...");
    Wait(10);
    cCharacter.Say("Ajá");
    cCharacter.AddInventory(invPaquete);
    cCharacter.Say("Esto se está poniendo interesante");
    cCuboBasura.SetProperty("Dialog3", 1);
  }
  else{
    cCharacter.Say("Debería dejar de husmear en la basura");
    cCharacter.Say("Me pone mal el pelo");
  }
}

function cCuboBasura_UseInv(Character *theCharacter, CursorMode mode)
{
  cCharacter.Walk(580, 220, eBlock, eWalkableAreas);
  Wait(7);
  if(cCharacter.ActiveInventory == invLlave && cCuboBasura.GetProperty("Dialog2") != 1){
    cCharacter.Say("Nop");
    cCharacter.Say("Esta llave no funciona aquí");
    cCharacter.Say("El contenedor está sellado con un código");
    cCharacter.Say("Y siendo honestos...");
    cCharacter.Say("La llave parece muy cara como para abrir un contenedor de basura");
  }
  else if(cCuboBasura.GetProperty("Dialog2") != 1){
    cCharacter.Say("Así no se va a abrir");
    cCharacter.Say("Tengo que introducir el código correctamente en la pantalla");
    cCharacter.Say("Es la única forma");
    cCharacter.Say("Lo lógico sería que estuviera apuntado por aquí cerca");
  }
  else{
    cCharacter.Say("No debería de tirar nada");
    cCharacter.Say("Puede que todavía tenga alguna utilidad");
    cCharacter.Say("O puede que alguien en Vinted lo quiera...");
  }
  cCharacter.ActiveInventory = null;
}


// Rook
function cNPC2_Look(Character *theCharacter, CursorMode mode)
{
  cCharacter.Say("He visto a ese hombre en alguna ficha policial");
  cCharacter.Say("Estoy seguro");
  cCharacter.Say("Debería hacerle un par de preguntas");
  cCharacter.Say("Seguro que saco algo de aquí");
}

function cNPC2_Interact(Character *theCharacter, CursorMode mode)
{
  cCharacter.Walk(515, 215, eBlock, eWalkableAreas);
  Wait(7);
  dDialog5.Start();
}

function cNPC2_UseInv(Character *theCharacter, CursorMode mode)
{
  cCharacter.Walk(515, 215, eBlock, eWalkableAreas);
  Wait(7);
  cCharacter.Say("Tengo que hablar con él");
  cCharacter.Say("No voy a conseguir nada con esto");
  cCharacter.ActiveInventory = null;
}


// Miles
function cNPC3_Look(Character *theCharacter, CursorMode mode)
{
  cCharacter.Say("Aquel tiene pinta de saber cosas");
  cCharacter.Say("Se le ve demasiado tranquilo para el sitio en el que está");
  cCharacter.Say("A lo mejor debería hablar con él");
}

function cNPC3_Interact(Character *theCharacter, CursorMode mode)
{
  cCharacter.Walk(105, 220, eBlock, eWalkableAreas);
  Wait(7);
  if(cNPC3.GetProperty("Dialog2") != 1 && cNPC3.GetProperty("Dialog1") != 1){
    dDialog8.Start();
  }
  else if(cNPC3.GetProperty("Dialog2") != 1){
    cNPC3.Say("No hay prisa, tío");
    cNPC3.Say("Cuando me traigas el paquete del contenedor");
    cNPC3.Say("Te doy las llaves del coche");
    cNPC3.Say("Pero no te apresures si no quieres...");
    cNPC3.Say("Hay que disfrutar de estos pequeños momentos");
    Wait(12);
  }
  else{
    cCharacter.Say("...");
  }
  cNPC3.SetProperty("Dialog1", 1);
}

function cNPC3_UseInv(Character *theCharacter, CursorMode mode)
{
  cCharacter.Walk(105, 220, eBlock, eWalkableAreas);
  Wait(7);
  if(cCharacter.ActiveInventory == invPaquete && cNPC3.GetProperty("Dialog1") == 1){
    cCharacter.Say("Aquí tienes... creo que esto ayudará a que cerremos el acuerdo");
    cCharacter.LoseInventory(invPaquete);
    Wait(8);
    cNPC3.Say("Perfecto... lo prometido es deuda");
    cNPC3.Say("Aquí están las llaves del coche");
    Wait(8);
    cCharacter.AddInventory(invLlave);
    cNPC3.Say("Cuando termines déjalas dentro");
    cNPC3.Say("Ahh y una última cosa");
    cNPC3.Say("A mi ni me has visto, ni has hablado nunca contigo");
    cNPC3.SetProperty("Dialog2",  1);
  }
  else if (cCharacter.ActiveInventory == invPaquete){
    cCharacter.Say("Oye amigo... ¿esto te interesa por algún casual?");
    cNPC3.Say("Eyy... eso es mío, ¿cómo lo has conseguido?");
    cCharacter.Say("Te lo puedo cambiar por algo, dime ¿qué sabes?");
    cNPC3.Say("Buscas a la gente del restaurante ¿no?");
    cCharacter.Say("Algo así");
    cNPC3.Say("Yo les aparco los coches...");
    cNPC3.Say("Y también vigilo esta zona");
    cNPC3.Say("Así que no puedo ir a por mi paquete...");
    cNPC3.Say("Que me está esperando en la calle de al lado");
    cNPC3.Say("Me vendría bien que alguien lo reocgiera y me lo trajera");
    cNPC3.Say("Sin hacer preguntas");
    cCharacter.Say("¿Y yo que recibo a cambio?");
    cNPC3.Say("Ahora mismo a mano... solo llevo las llaves del coche de uno de esos tíos");
    cCharacter.Say("Trato hecho");
    cNPC3.Say("Mmmm.... vale");
    cCharacter.LoseInventory(invPaquete);
    cNPC3.Say("Aquí están las llaves del coche");
    Wait(8);
    cCharacter.AddInventory(invLlave);
    cNPC3.Say("No está tan mal hacer negocios contigo");
    cCharacter.Say("Igualmente");
    cNPC3.Say("Cuando termines déjalas dentro, el dueño tiene otra copia");
    cNPC3.Say("Ahh y una última cosa");
    cNPC3.Say("A mi ni me has visto, ni has hablado nunca contigo");
    cNPC3.SetProperty("Dialog2",  1);
  }
  else if(cCharacter.ActiveInventory == invIngrediente){
    cNPC3.Say("Ese no es mi paquete");
    cNPC3.Say("No me van los pesticidas");
    cNPC3.Say("Lo mío está dentro del contenedor de esa calle");
  }
  else{
    cCharacter.Say("No creo que consiga nada haciendo eso");
  }
  cCharacter.ActiveInventory = null;
}


// Guardia (Astra)
function cNPC4_Look(Character *theCharacter, CursorMode mode)
{
  cCharacter.Say("Ese cyborg protege la puerta");
  cCharacter.Say("No debería molestarlo");
  cCharacter.Say("Creo que me gustan las muñecas donde las tengo");
}

function cNPC4_Interact(Character *theCharacter, CursorMode mode)
{
  cCharacter.Walk(387, 225, eBlock, eWalkableAreas);
  Wait(7);
  if(cNPC4.GetProperty("Dialog1") != 1){
    dDialog9.Start();
  }
  else{
    cNPC4.Say("Ya te he dicho que dejes de mirar tanto");
    cNPC4.Say("¿Y quién te ha dado permiso para acercarte otra vez?");
    cNPC4.Say("Si das un paso más... no lo cuentas");
    cNPC4.Say("¿Lo has entendido o te lo explico más despacio?");
    cNPC4.Say("A lo mejor necesitas un ejemplo...");
    cCharacter.Walk(350, 233, eBlock, eWalkableAreas);
    cCharacter.Say("Nahh, estoy bien así");
  }
  cNPC4.SetProperty("Dialog1", 1);
}

function cNPC4_UseInv(Character *theCharacter, CursorMode mode)
{
  cCharacter.Walk(386, 225, eBlock, eWalkableAreas);
  Wait(7);
  if (cCharacter.ActiveInventory == invIngrediente){
    cCharacter.Say("Oye colega, sé que hemos empezado con mal pie");
    cCharacter.Say("Pero estamos en el mismo equipo");
    cCharacter.Say("Solo soy nuevo...");
    Wait(12);
    cNPC4.Say("Ujum");
    cCharacter.Say("Y quería compensarte lo de antes");
    cCharacter.Say("Toma tío");
    Wait(7);
    cCharacter.LoseInventory(invIngrediente);
    cCharacter.Say("Se agradece pichón");
    cCharacter.Say("Tenía muchas ganas de esto...");
    cCharacter.Say("Voy ahora mismo al baño a por una cosa");
    Wait(7);
    cCharacter.Say("Cuidame la puerta mientras vuelvo ¿quieres?");
    cNPC4.on = 0;
    cNPC5.SetProperty("Dialog2", 1);
  }
  else{
    cCharacter.Say("No hay manera de que usar esto con él sirva de algo");
    cCharacter.Say("Tiene que haber un plan mejor");
  }
  cCharacter.ActiveInventory = null;
}


// Anonymus
function cNPC5_Look(Character *theCharacter, CursorMode mode)
{
  cCharacter.Say("No estoy seguro de querer saber quién es o que hace");
  cCharacter.Say("Pero algo me dice...");
  cCharacter.Say("Que voy a tener que hablar con él en algún momento");
  cCharacter.Say("Al menos si quiero seguir avanzando en la investigación");
}

function cNPC5_Interact(Character *theCharacter, CursorMode mode)
{
  cCharacter.Walk(460, 233, eBlock, eWalkableAreas);
  Wait(7);
  if(cNPC5.GetProperty("Dialog1") != 1){
    dDialog10.Start();
  }
  else if(cNPC5.GetProperty("Dialog2") != 1){
    cCharacter.Say("Oye...");
    cNPC5.Say("Shhh");
    cNPC5.Say("Ya sabes lo que hay que hacer... no demores...");
  }
  else if(cNPC5.GetProperty("Dialog3") != 1){
    cNPC5.Say("Menos mal que te has librado del cerbero...");
    cNPC5.Say("Ahora podemos hablar más tranquilos...");
    cCharacter.Say("Perfecto, dime ¿qué es lo quieres?");
    cCharacter.Say("¿Qué es lo que estás haciendo aquí?");
    cNPC5.Say("Tú dedo... tapa el sol que tienes delante...");
    cCharacter.Say("¿Mi dedo? Se puede saber que dices");
    cNPC5.Say("Buscamos lo mismo... pero en dimensiones diferentes...");
    cNPC5.Say("Tú buscas tapar los agujeros...");
    cNPC5.Say("Yo pretenedo volar la madriguera por los aires...");
    cCharacter.Say("Entiendo... eres un revolucionario");
    cNPC5.Say("Las etiquetas... no tiene sentido fuera de la visión del capital...");
    cNPC5.Say("Tengo un vídeo incriminatorio... de toda esta trama...");
    cNPC5.Say("Una reunión de algunos ejecutivos...");
    cNPC5.Say("Hablando de lo que siguen hablando ahí adentro...");
    cCharacter.Say("¿Y qué quieres a cambio?");
    cCharacter.Say("Porque habrá algo a cambio, ¿a que sí?");
    cNPC5.Say("Necesito la información de geolacalización de algún coche de la empresa...");
    cNPC5.Say("Tengo una pista... y necesito esa información...");
    cCharacter.Say("¿Y quieres que yo te la consiga?");
    cNPC5.Say("Tú eres el hombre de campo... podrás hacerlo...");
    cCharacter.Say("Digamos que lo hago, ¿cómo sé que no me estás mintiendo?");
    cCharacter.Say("¿Qué el vídeo es lo que dices que es?");
    cNPC5.Say("No lo sabes... pero... ¿tienes otra opción?");
    cCharacter.Say("Touché");
    cNPC5.SetProperty("Dialog3", 1);
  }
  else if(cNPC5.GetProperty("Dialog4") != 1){
    cCharacter.Say("¿Sabes cómo conseguir la información del coche?");
    cNPC5.Say("No todo lo que sé... debe ser compartido...");
    cCharacter.Say("Ejem...");
    cNPC5.Say("No, la verdad que no");
  }
  else{
    cNPC5.Say("Sé que harás buen uso de ese vídeo...");
    cNPC5.Say("Pero no te lo pondrán nada fácil... apenas conseguirás nada ahora...");
    cNPC5.Say("Rascar un poco la superficie como mucho...");
    cNPC5.Say("Y detener a un par de moscas...");
    cNPC5.Say("No te preocupes... yo me encargaré de agitar el avispero...");
    cNPC5.Say("Estate preparado... para cuando llegue el momento....");
    cNPC5.on = 0;
    Wait(10);
    cCharacter.Say("Mmm.... vale");
    cCharacter.Say("Debería de volver a comisaría con esto cuanto antes");
    cCharacter.Say("Y dejarme de historias");
  }
}

function cNPC5_UseInv(Character *theCharacter, CursorMode mode)
{
  cCharacter.Walk(460, 233, eBlock, eWalkableAreas);
  Wait(7);
  if (cCharacter.ActiveInventory == invDatos && cNPC5.GetProperty("Dialog1") == 1 && cNPC5.GetProperty("Dialog2") == 1){
    Wait(7);
    cCharacter.LoseInventory(invDatos);
    cNPC5.Say("Eso es...");
    cNPC5.Say("Esta es la pieza del puzzle... que faltaba...");
    cNPC5.Say("Aquí tienes amigo...");
    cNPC5.Say("A mi no me sirve de nada... pero supongo que es lo que tú buscas...");
    Wait(7);
    cCharacter.AddInventory(invVideo);
    cNPC5.Say("Cuídate... y mucha suerte...");
    cNPC5.Say("La necesitarás...");
    cNPC5.SetProperty("Dialog4", 1);
  }
  else if(cNPC5.GetProperty("Dialog2") == 1){
    cCharacter.Say("Mira");
    Wait(7);
    cNPC5.Say("Qué superfluo...");
    cNPC5.Say("No necesito nada así...");
    cNPC5.Say("Yo busco la verdad...");
    cNPC5.Say("No la certeza...");
    Wait(7);
    cNPC5.Say("No es lo mismo...");
  }
  else{
    cNPC5.Say("Lo siento...");
    cNPC5.Say("No podemos intercambiar nada ahora mismo...");
  }
  cCharacter.ActiveInventory = null;
}



//////////////////////////////////////////////////////////////////////////
//                           Inventario                                 //
//////////////////////////////////////////////////////////////////////////

// Botones GUI
function Button4_OnClick(GUIControl *control, MouseButton button)
{
  if(gInv.Visible == false){
    gInv.Visible = true;
  }
  else{
    gInv.Visible = false;
  }
}

function ButtonInvRight_OnClick(GUIControl *control, MouseButton button)
{
  InventoryWindow1.ScrollDown();
}

function ButtonInvLeft_OnClick(GUIControl *control, MouseButton button)
{
  InventoryWindow1.ScrollUp();
}



//////////////////////////////////////////////////////////////////////////
//                             Objetos                                  //
//////////////////////////////////////////////////////////////////////////

// Dinero
function invDinero_Look(InventoryItem *theItem, CursorMode mode)
{
  cCharacter.Say("Este bloque electrónico contiene bastante dinero");
  cCharacter.Say("Debería de usarlo solo si me ayuda con el caso");
  cCharacter.Say("No me quiero volver andando a casa...");
}

// Decodificador
function invDecodificador_Look(InventoryItem *theItem, CursorMode mode)
{
  cCharacter.Say("Es un decodificador holográfico de última generación");
  cCharacter.Say("Permite ver mensajes holográficos ocultos a simple vista");
  cCharacter.Say("Si lo utilizo en el lugar correcto quizá vea algo interesante");
}

// Llave
function invLlave_Look(InventoryItem *theItem, CursorMode mode)
{
  cCharacter.Say("Esta llave parece cara");
  cCharacter.Say("Debe abrir algo aún más caro");
}

// Ingrediente
function invIngrediente_Look(InventoryItem *theItem, CursorMode mode)
{
  cCharacter.Say("No quiero ni saber que es esto");
}

// Datos
function invDatos_Look(InventoryItem *theItem, CursorMode mode)
{
  cCharacter.Say("Este bloque cuántico contiene mucha información");
  cCharacter.Say("Probablemente datos de navegación y horarios del coche");
  cCharacter.Say("Pero dudo que a mí me sirva de algo");
}

// Paquete
function invPaquete_Look(InventoryItem *theItem, CursorMode mode)
{
  cCharacter.Say("No puedo abrirlo, está sellado electrónicamente");
  cCharacter.Say("El cliente habitual debe tener una llave privada para acceder");
  cCharacter.Say("Que pizza tan rara");
}

// Video
function invVideo_Look(InventoryItem *theItem, CursorMode mode)
{
  cCharacter.Say("Este chip contiene un vídeo incriminatorio");
  cCharacter.Say("No hay forma de saberlo y aún así estoy seguro de ello");
  cCharacter.Say("Tengo que volver con la prueba por donde he venido");
  cCharacter.Say("Y con la satisfacción del trabajo bien hecho");
  cCharacter.Say("Un día más en el paraíso");
}


//////////////////////////////////////////////////////////////////////////
//                            Funciones                                 //
//////////////////////////////////////////////////////////////////////////

// Funcion para el código del cubo de basura
bool InputContenedorDigit(int digit) {
  if(digit != 999){
    if (safe_count < 4) {
      safe_input[safe_count] = digit;
      safe_count++;
    }
    
    // Si ya se ingresaron los 4 dígitos, comprobamos
    if (safe_count == 4) {
      // Reiniciar para nuevo intento
      safe_count = 0;
      
      for (int i = 0; i < 4; i++) {
        if (safe_input[i] != safe_code[i]) {
          cCuboBasura.Say("Código incorrecto. Acceso denegado");
          Wait(12);
          return true;
        }
      }
      aAbrirCofre.Play(eAudioPriorityHigh, eOnce);
      cCuboBasura.SetProperty("Dialog2", 1);
      cCuboBasura.Say("Código correcto. Acceso permitido");
      Wait(12);
      return true;
    }
    return false;
  }
  
  // Reiniciar para nuevo intento
  safe_count = 0;
      
  return true;
}

